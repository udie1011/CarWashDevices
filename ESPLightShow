#include <IRremote.h>
#include "WiFi.h"

#define WIFI_NETWORK

#define DISABLE_CODE_FOR_RECEIVER // Saves 450 bytes program memory and 269 bytes RAM if receiving functions are not used.
#define IR_SEND_PIN 15


int sensorPresoak1 = 0;
int sensorPresoak2 = 0;
int sensorHighPressure = 0;
int sensorTripleFoam = 0;
int sensorWax = 0;
int sensorSpotFree = 0;
int sensorGoSign = 0;
int sensorStopSign = 0;
int sensorReverseSign = 0;
int sensorDryer = 0;

int sensorWashInUse = 0;

int washNotInUse = false;

int washInUseTime = 6000000;



// Color codes for RGB floodlight(s)

// int red1 = 0xEF00, 0x4, 4;
// int green1 = 0xEF00, 0x5, 4;
// int blue1 = 0xEF00, 0x6, 4;

// int red2 = 0xEF00, 0x8, 4;
// int green2 = 0xEF00, 0x9, 4;
// int blue2 = 0xEF00, 0xA, 4;

// int red3 = 0xEF00, 0xC, 4;
// int green3 = 0xEF00, 0xD, 4;
// int blue3 = 0xEF00, 0xE, 4;

// int red4 = 0xEF00, 0x10, 4;
// int green4 = 0xEF00, 0x11, 4;
// int blue4 = 0xEF00, 0x12, 4;

// int red5 = 0xEF00, 0x14, 4;
// int green5 = 0xEF00, 0x15, 4;
// int blue5 = 0xEF00, 0x16, 4;

// int white = 0xEF00, 0x7, 4;
// int on = 0xEF00, 0x3, 4;
// int off = 0xEF00, 0x2, 4;
// int brightnessUp = 0xEF00, 0x0, 4;
// int brightnessDown = 0xEF00, 0x1, 4;
// int flash = 0xEF00, 0xB, 4;
// int strobe = 0xEF00, 0xF, 4;
// int fade = 0xEF00, 0x13, 4;
// int smooth = 0xEF00, 0x17, 4;


int ledThreshold = 1000; //level of light required to trigger an 'on' state for programs to run while led on.


IRsend irsend;


void setup() {
  // put your setup code here, to run once:
  pinMode(13, INPUT);
  pinMode(39, INPUT);
  pinMode(15, INPUT);
  pinMode(2, OUTPUT);  


  Serial.begin(115200);

  IrSender.begin(IR_SEND_PIN);


}

void loop() {
  // put your main code here, to run repeatedly:

  //various if statements to detect 'on' led which triggers corresponding color codes to IR sender to RGB floodlights.

  sensorPresoak1 = analogRead(13);
  // Serial.println(sensorPresoak1);
  if (sensorPresoak1 > ledThreshold) {
    Serial.println("Presoak 1 On");
    IrSender.sendNEC(0xEF00, 0x10, 4);    
    delay(500);
  }
  sensorPresoak2 = analogRead(12);
  if (sensorPresoak2 > ledThreshold) {
    Serial.println("Presoak 2 On");
    IrSender.sendNEC(0xEF00, 0x10, 4);    
    delay(500);
  }
  sensorHighPressure = analogRead(14);
  if (sensorHighPressure > ledThreshold && sensorSpotFree < ledThreshold && sensorGoSign < ledThreshold) {
    Serial.println("High Pressure On");
    IrSender.sendNEC(0xEF00, 0xD, 4);    
    delay(500);
  }
  sensorTripleFoam = analogRead(27);
  if (sensorTripleFoam > ledThreshold) {
    Serial.println("Triple Foam On");
    IrSender.sendNEC(0xEF00, 0x14, 4);    
    delay(500);
    IrSender.sendNEC(0xEF00, 0x16, 4);    
    delay(500);
    IrSender.sendNEC(0xEF00, 0x15, 4);    
    delay(500);
  }
  sensorWax = analogRead(26);
  if (sensorWax > ledThreshold) {
    Serial.println("Wax On");
    IrSender.sendNEC(0xEF00, 0xC, 4);
    delay(500);
  }
  sensorSpotFree = analogRead(25);
  if (sensorSpotFree > ledThreshold) {
    Serial.println("Spot Free On");
    IrSender.sendNEC(0xEF00, 0x15, 4);    
    delay(500);
  }
  sensorGoSign = analogRead(33);
  if (sensorGoSign > ledThreshold) {
    Serial.println("Go Sign On");
    IrSender.sendNEC(0xEF00, 0x5, 4);  
    washNotInUse = false;  
    delay(500);
  }
  sensorReverseSign = analogRead(35);
  if (sensorReverseSign > ledThreshold) {
    Serial.println("Reverse Sign On");
    IrSender.sendNEC(0xEF00, 0x6, 4);    
    delay(500);
  }
  sensorDryer = analogRead(34);
  if (sensorDryer > ledThreshold) {
    Serial.println("Dryer On");
    IrSender.sendNEC(0xEF00, 0x4, 4);    
    delay(500);
  }
  sensorStopSign = analogRead(32);
  if (sensorStopSign > ledThreshold && sensorDryer < ledThreshold && sensorSpotFree < ledThreshold && sensorWax < ledThreshold && sensorTripleFoam < ledThreshold && sensorHighPressure < ledThreshold && sensorPresoak2 < ledThreshold && sensorPresoak1 < ledThreshold){
    Serial.println("Stop Sign On");
    IrSender.sendNEC(0xEF00, 0x4, 4);    
    delay(500);
    washNotInUse = false;
  }
  if (washNotInUse == false) {
    if (sensorStopSign < ledThreshold && sensorDryer < ledThreshold && sensorReverseSign < ledThreshold && sensorGoSign < ledThreshold && sensorSpotFree < ledThreshold && sensorWax < ledThreshold && sensorTripleFoam < ledThreshold && sensorHighPressure < ledThreshold && sensorPresoak2 < ledThreshold && sensorPresoak1 < ledThreshold){
      Serial.println("Wash not in use");
      IrSender.sendNEC(0xEF00, 0x17, 4); 
      washNotInUse = true;       
      delay(500);
    }
  }

// IrSender.sendNEC(0xEF00, 0x3, 4);    




  //section for wash in use sensor which if it's on for x time then it will produce a fault trigger.

  sensorWashInUse = analogRead(39);
  if (sensorWashInUse > ledThreshold) {
    // Serial.println("WashInUse On");
    washInUseTime -= 1000; //1 second decrement
    Serial.println(washInUseTime);
    delay(100);
    if(washInUseTime < 1) {
      Serial.println("Alarm!");
      digitalWrite(2, HIGH);      
    }    
  }

  if (sensorWashInUse < ledThreshold) {
    washInUseTime = 6000000;
    digitalWrite(2, LOW);  
   }  
     
}
